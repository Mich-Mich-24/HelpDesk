@model IEnumerable<HelpDesk.Models.Ticket>

@{
    ViewData["Title"] = "Tickets";
}



<div class="row">
    <div class="col-lg-3 col-6">
        <div class="small-box" style="background-color: #001f3f;">
            <!-- Dark Navy Blue -->
            <div class="inner">
                <h3 class="text-light">@ViewData["NewTickets"]</h3>
                <p class="text-light">New Tickets</p>
            </div>
            <div class="icon">
                <i class="ion ion-bag text-light"></i>
            </div>
            <a href="#" class="small-box-footer text-light">More info <i class="fas fa-arrow-circle-right"></i></a>
        </div>
    </div>
    <div class="col-lg-3 col-6">
        <div class="small-box" style="background-color: #004080;">
            <!-- Dark Ocean Blue -->
            <div class="inner">
                <h3 class="text-light">@ViewData["ResolvedTickets"]</h3>
                <p class="text-light">Resolved Tickets</p>
            </div>
            <div class="icon">
                <i class="ion ion-stats-bars text-light"></i>
            </div>
            <a href="#" class="small-box-footer text-light">More info <i class="fas fa-arrow-circle-right"></i></a>
        </div>
    </div>
    <div class="col-lg-3 col-6">
        <div class="small-box" style="background-color: #0056b3;">
            <!-- Dark Steel Blue -->
            <div class="inner">
                <h3 class="text-light">@ViewData["UserRegistrations"]</h3>
                <p class="text-light">User Registrations</p>
            </div>
            <div class="icon">
                <i class="ion ion-person-add text-light"></i>
            </div>
            <a href="#" class="small-box-footer text-light">More info <i class="fas fa-arrow-circle-right"></i></a>
        </div>
    </div>
    <div class="col-lg-3 col-6">
        <div class="small-box" style="background-color: #007bff;">
            <!-- Bootstrap Primary -->
            <div class="inner">
                <h3 class="text-light">@ViewData["UniqueVisitors"]</h3>
                <p class="text-light">Unique Visitors</p>
            </div>
            <div class="icon">
                <i class="ion ion-pie-graph text-light"></i>
            </div>
            <a href="#" class="small-box-footer text-light">More info <i class="fas fa-arrow-circle-right"></i></a>
        </div>
    </div>
</div> <!--end row--> 
<div class="container">
    <div class="row">
        <!-- First Card Column -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                   <div id="container1" style="width: 100%;"></div>
                </div>
           </div>
               
        </div>

        <!-- Second Card Column -->
        <div class="col-md-6">
            <div class="card">
               <div class="card-body">
                   <div id="container2" style="width: 100%;"></div>
               </div>
                 
            </div>
        </div>

        <!-- Third Card Column -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                   <div id="container3" style="width: 100%;"></div>
                </div>
            </div>
                
        </div>

        <!-- Fourth Card Column -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <div id="container4" style="width: 100%;"></div>
                </div>
            </div>

        </div>
    </div>
</div>


<div class="card rounded-4">
    <div class="card-body">
        <div class="d-flex align-items-center">
            <h6 class="mb-0">Recent Tickets</h6>
       </div>

       <div class="table-responsive mt-2">
            <!-- Table for Tickets -->
            <table class="table table-bordered table-responsive table-hover table-responsive-lg">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Id)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Title)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Description)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Priority)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Status)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CreatedBy)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CreatedOn)
                        </th>
                        

                        <th>No Of Comments</th>
                        <th>Comments</th>
                        <th>View</th>
                        <th>Edit</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        var colorcode = "Red";
                        if (item.Status.Code == "Resolved")
                        {
                            colorcode = "Green";
                        }
                        else if (item.Status.Code == "Escalated")
                        {
                            colorcode = "Yellow";
                        }
                        else if (item.Status.Code == "InProgress")
                        {
                            colorcode = "Purple";
                        }
                        else if (item.Status.Code == "Closed")
                        {
                            colorcode = "Green";
                        }

                        else if (item.Status.Code == "AwaitingAssignment")
                        {
                            colorcode = "Red";
                        }
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Title)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Priority.Description)
                            </td>
                            <td style="background-color:@colorcode">
                                @Html.DisplayFor(modelItem => item.Status.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CreatedBy.FullName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CreatedOn)
                            </td>

                            <td style="text-align:center">
                                <a asp-action="TicketsComments" asp-controller="Comments" asp-route-id="@item.Id">  @item.TicketComments.Count() </a>
                            </td>
                            <td>

                                <a class="btn btn-secondary" asp-action="TicketsComments" asp-controller="Comments" asp-route-id="@item.Id">Comments</a>

                            </td>
                            <td>
                                <a class="btn btn-warning" asp-action="Details" asp-route-id="@item.Id">Details</a>

                            </td>
                            <td>
                                <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a>

                            </td>
                        </tr>
                    }
                </tbody>
            </table>
       </div>
    </div>
</div>

<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/series-label.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>
<script src="https://code.highcharts.com/highcharts-3d.js"></script>
<script src="https://code.highcharts.com/modules/accessibility.js"></script>



<script type="text/javascript">
 
    //FIRST CHART

    Highcharts.chart('container1', {
        chart: {
            type: 'pie',
            options3d: {
                enabled: true,
                alpha: 45,
                beta: 0
            }
        },
        title: {
            text: 'Number of Tickets Per Category',
            align: 'left'
        },

        accessibility: {
            point: {
                valueSuffix: '%'
            }
        },
        tooltip: {
            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
        },
        plotOptions: {
            pie: {
                allowPointSelect: true,
                cursor: 'pointer',
                depth: 35,
                dataLabels: {
                    enabled: true,
                    format: '{point.name}'
                }
            }
        },
        series: [{
            type: 'pie',
            name: 'Share',
            data: [
                ['Samsung', 23],
                ['Apple', 18],
                {
                    name: 'Xiaomi',
                    y: 12,
                    sliced: true,
                    selected: true
                },
                ['Oppo*', 9],
                ['Vivo', 8],
                ['Others', 30]
            ]
        }]
    });
    //SECOND CHART

    // Data retrieved from https://en.wikipedia.org/wiki/Winter_Olympic_Games
    Highcharts.chart('container2', {

        chart: {
            type: 'column'
        },

        title: {
            text: 'Number of Tickets per Category',
            align: 'left'
        },

        xAxis: {
            categories: ['Gold', 'Silver', 'Bronze']
        },

        yAxis: {
            allowDecimals: false,
            min: 0,
            title: {
                text: 'Count medals'
            }
        },

        tooltip: {
            format: '<b>{key}</b><br/>{series.name}: {y}<br/>' +
                'Total: {point.stackTotal}'
        },

        plotOptions: {
            column: {
                stacking: 'normal'
            }
        },

        series: [{
            name: 'Norway',
            data: [148, 133, 124],
            stack: 'Europe'
        }, {
            name: 'Germany',
            data: [102, 98, 65],
            stack: 'Europe'
        }, {
            name: 'United States',
            data: [113, 122, 95],
            stack: 'North America'
        }, {
            name: 'Canada',
            data: [77, 72, 80],
            stack: 'North America'
        }]
    });

    //THIRD CHART

    Highcharts.chart('container3', {

        title: {
            text: 'Number of Ticket Per Sub-Category',
            align: 'left'
        },

        yAxis: {
            title: {
                text: 'Number of Employees'
            }
        },

        xAxis: {
            accessibility: {
                rangeDescription: 'Range: 2010 to 2022'
            }
        },

        legend: {
            layout: 'vertical',
            align: 'right',
            verticalAlign: 'middle'
        },

        plotOptions: {
            series: {
                label: {
                    connectorAllowed: false
                },
                pointStart: 2010
            }
        },

        series: [{
            name: 'Installation & Developers',
            data: [
                43934, 48656, 65165, 81827, 112143, 142383,
                171533, 165174, 155157, 161454, 154610, 168960, 171558
            ]
        }, {
            name: 'Manufacturing',
            data: [
                24916, 37941, 29742, 29851, 32490, 30282,
                38121, 36885, 33726, 34243, 31050, 33099, 33473
            ]
        }, {
            name: 'Sales & Distribution',
            data: [
                11744, 30000, 16005, 19771, 20185, 24377,
                32147, 30912, 29243, 29213, 25663, 28978, 30618
            ]
        }, {
            name: 'Operations & Maintenance',
            data: [
                null, null, null, null, null, null, null,
                null, 11164, 11218, 10077, 12530, 16585
            ]
        }, {
            name: 'Other',
            data: [
                21908, 5548, 8105, 11248, 8989, 11816, 18274,
                17300, 13053, 11906, 10073, 11471, 11648
            ]
        }],

        responsive: {
            rules: [{
                condition: {
                    maxWidth: 500
                },
                chartOptions: {
                    legend: {
                        layout: 'horizontal',
                        align: 'center',
                        verticalAlign: 'bottom'
                    }
                }
            }]
        }

    });

    //FOURTH CHART

    // Data retrieved from https://netmarketshare.com/
    // Make monochrome colors
    const colors = Highcharts.getOptions().colors.map((c, i) =>
        // Start out with a darkened base color (negative brighten), and end
        // up with a much brighter color
        Highcharts.color(Highcharts.getOptions().colors[0])
            .brighten((i - 3) / 7)
            .get()
    );

    // Build the chart
    Highcharts.chart('container4', {
        chart: {
            plotBackgroundColor: null,
            plotBorderWidth: null,
            plotShadow: false,
            type: 'pie'
        },
        title: {
            text: 'Total Number of Tickets Per Status',
            align: 'left'
        },
        tooltip: {
            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
        },
        accessibility: {
            point: {
                valueSuffix: '%'
            }
        },
        plotOptions: {
            pie: {
                allowPointSelect: true,
                cursor: 'pointer',
                colors,
                borderRadius: 5,
                dataLabels: {
                    enabled: true,
                    format: '<b>{point.name}</b><br>{point.percentage:.1f} %',
                    distance: -50,
                    filter: {
                        property: 'percentage',
                        operator: '>',
                        value: 4
                    }
                }
            }
        },
        series: [{
            name: 'Share',
            data: [
                { name: 'Chrome', y: 74.03 },
                { name: 'Edge', y: 12.66 },
                { name: 'Firefox', y: 4.96 },
                { name: 'Safari', y: 2.49 },
                { name: 'Internet Explorer', y: 2.31 },
                { name: 'Other', y: 3.398 }
            ]
        }]
    });
  

</script>